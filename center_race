def reward_function(params):
    '''
    Example of rewarding the agent to follow center line
    '''
    
    # Read input parameters
    all_wheels_on_track = params['all_wheels_on_track']
    track_width = params['track_width']
    distance_from_center = params['distance_from_center']
    steering_angle = params['steering_angle']
    speed = params['speed']
    
    # Calculate 3 markers that are at varying distances away from the center line
    marker_1 = 0.2 * track_width
    marker_2 = 0.4 * track_width
    marker_3 = 0.5 * track_width
    
    # Give higher reward if the car is closer to center line and vice versa
    if distance_from_center <= marker_1:
        reward = 2
        if 3 <= speed < 3.5:
            reward += 0.4
        elif 2 <= speed < 3:
            reward += 0.3
            
    elif distance_from_center <= marker_2:
        reward = 0.8
        if 15<= abs(steering_angle) <= 25:
            if 1 <= speed <= 1.5:
                reward += 0.2
            if 1.5 <= speed <= 2:
                reward += 0.1
            reward += 0.1
    
    elif distance_from_center <= marker_3:
        reward = 0.2
        if 15<= abs(steering_angle) <= 25:
            if 0.5 <= speed <= 1:
                reward += 0.2
            reward += 0.1
            
    else:
        reward = 0.001

    if all_wheels_on_track == False:
        reward -= 3
    
    
    return float(reward)

# 중앙선을 지키면서 달리기 위한 코드
# 단점
# 1. 최적 동선을 따르지 못한다.
# 2. 탐색범위가 너무 크다
# 3. 중앙에서 벗어나지 않기 위해 속도를 내지 않는 경우가 발생할 가능성이 높다.
